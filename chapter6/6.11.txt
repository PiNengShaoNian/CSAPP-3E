有时候，理解为什么某种思想是不好的，能够帮助你理解为什么另一种是好的。这里，我们看到的坏的想法使用高位来索引高速缓存，而不是用中间的位。
A. 用高位做索引，每个连续的数组片(chunk)有2^t个块组成，这里t是标记位数。因此，数组头2^t个连续的块都会映射到组0，接下来的
   2^t个块会映射到1，以此类推。

B. 对于直接映射缓存(S, E, B, m) = (512, 1, 32, 32),高速缓存的容量是512个32子节块，每个高速缓存行中有t=18个标记位。
   因此，数组中头2^18个块会映射到组0,接下来2 ^ 18个块会映射到组1。因此我们的数组有(4096 * 4) / 32 = 512个块组成，
   所以组中所有的块都能映射到组0。因此，在任何时刻，高速缓存至多只能保存一个数据块，即使数据足够小，能够完全放到
   高速缓存中。很明显，用高位做数组索引不能充分利用高速缓存。