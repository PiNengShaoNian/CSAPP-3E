            主存                                 高速缓存    
    ---0   ______________                     ______________
src|      |_______|______|映射行0             |______|______|  行0
    ---16 |_______|______|映射行1             |______|______|  行1
dst|      |_______|______|映射行0             
    ---   |_______|______|映射行1             



A. 每个高速缓存行只包含数组的一个行，高速缓存正好只能保存一个数组，而对于所用的i，src和dst的行i映射到同一个高速缓存
   .因为高度缓存不够大，不足以存储下这个数组，所以对一个数组的引用总是驱逐出另一个数组有用的行。例如，对dst[0][0]写
   会驱逐当我们读src[0][0]加载进来的那一行。所以当我们接下来读src[0][1]时，会有一个不命中

(1)读src[0][0]不命中 ，高速缓存 row0 =  [src[0][0],src[0][1]]
                               row1 = [________, _________]

(2)写dst[0][0]不命中,高速缓存   row0 = [dst[0][0],dst[0][1]]
                               row1 = [________, _________]

(3)读src[0][1]不命中,高速缓存   row0 = [src[0][0],src[0][1]]
                               row1 = [________, _________]

(4)写dst[1][0]不命中,高速缓存   row0 = [src[0][0],src[0][1]]
                               row1 = [dst[1][0],dst[1][1]]

(5)读src[1][0]不命中，高速缓存   row0 = [src[0][0],src[0][1]]
                               row1 = [src[1][0],src[1][1]]

(6)写dst[0][1]不命中，高速缓存   rwo0 = [dst[0][0],dst[0][1]]
                               row1 = [src[1][0],src[1][1]]

(7)读src[1][1]  命中，高速缓存   row0 = [src[0][0],src[0][1]]
                               row1 = [src[1][0],src[1][1]]

(8)写dst[1][1]不命中，高速缓存   row0 = [src[0][0],src[0][1]]
                               row1 = [dst[1][0],dst[1][1]]

    dst数组                                  src数组
        列0       列1                     列0       列1      
行0      m         m                行0    m         m
行1      m         m                行1    m         h

B. 当高速缓存为32子节时，他足够大，能容纳这两个数组。因此，所有的不命中都是开始时的冷不命中。

    dst数组                                  src数组
        列0       列1                     列0       列1      
行0      m         h                行0    m         h
行1      m         h                行1    m         h
