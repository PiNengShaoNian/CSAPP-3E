对这个问题的关键是注意到这个高速缓存只能保存数组的1/2.所以，按照顺序来扫描数组的第二部分会驱逐扫描第一部分加载进来的那些行。
例如，读grid[8][0]的第一个元素的时候会驱逐当前我们读grid[0][0]的元素加载进来的哪一行。这一行也包含了grid[0][1]。所以，当
我们开始扫描下一行时，对grid[1][0]的第一个元素的引用会不命中。
A. 读总数是512个读。
B. 总共有256个不命中。
C. 不命中率为 256 / 515 = 50%
D. 如果高速缓存有两倍大，那么他能保存整个grid数组。所有的不命中都是开始的冷不命中，二不命中率会是1 / 4 = 25%。